microservice-chart:
  namespace: "nodo"
  image:
    repository: ghcr.io/pagopa/pagopa-node-technical-support-worker
    tag: '1.2.14'
  readinessProbe:
    httpGet:
      path: /q/health/ready
      port: 8080
    initialDelaySeconds: 8
    failureThreshold: 10
    periodSeconds: 2
  livenessProbe:
    httpGet:
      path: /q/health/live
      port: 8080
    initialDelaySeconds: 8
    failureThreshold: 10
    periodSeconds: 2
  deployment:
    create: true
    replicas: 1
  serviceMonitor:
    create: true
    endpoints:
      - interval: 5s
        targetPort: 8080
        path: /q/metrics
  service:
    create: true
  ingress:
    create: true
    host: "weuprod.nodo.internal.platform.pagopa.it"
    path: /pagopa-nodo-technical-support-service/(.*)
  serviceAccount:
    name: "nodo-workload-identity"
  azure:
    workloadIdentityClientId: <workload-identity-client-id-set-automatically-by-gha>
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  resources:
    requests:
      memory: "400M"
      cpu: "200m"
    limits:
      memory: "3Gi"
      cpu: "400m"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 1
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: "75"
      - type: memory
        metadata:
          type: Utilization
          value: "75"
  envConfig:
    APP_ENVIRONMENT: "prod"
    TZ: "Europe/Rome"
    OTEL_ENDPOINT: "http://otel-collector.elastic-system.svc.cluster.local:4317"
    COSMOS_BIZ_ENDPOINT: "https://pagopa-p-weu-bizevents-ds-cosmos-account.documents.azure.com:443/"
    COSMOS_NEG_BIZ_ENDPOINT: "https://pagopa-p-weu-bizevents-neg-ds-cosmos-account.documents.azure.com:443/"
    COSMOS_VERIFYKO_ENDPOINT: "https://pagopa-p-weu-nodo-verifyko-cosmos-account.documents.azure.com:443/"
    DATASOURCE_URL: "jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=BROKEN)(ADDRESS=(PROTOCOL=tcp)(PORT=1521)(HOST=db-nodo-pagamenti.p.db-nodo-pagamenti.com))(CONNECT_DATA=(SERVICE_NAME=NDPSPCP_NODO_OFFLINE))(SO_KEEPALIVE=true)(TCP_KEEPIDLE=60)(TCP_KEEPINTVL=30)(TCP_KEEPCNT=15))"
    DATASOURCE_USERNAME: "PP_NODO_OFFLINE"
    DATASOURCE_SCHEMA: "ALTER SESSION SET CURRENT_SCHEMA=NODO_OFFLINE"
    DB_SERVICE_IDENTIFIER: "NDP003PROD"
    LOG_LEVEL: "INFO"
  envFieldRef:
    APP_NAME: "metadata.labels['app.kubernetes.io/instance']"
    APP_VERSION: "metadata.labels['app.kubernetes.io/version']"
  envSecret:
    OTEL_AUTH_BEARER: "otel-auth-bearer"
    COSMOS_BIZ_KEY: "cosmos-biz-account-key"
    COSMOS_NEG_BIZ_KEY: "cosmos-neg-biz-account-key"
    COSMOS_VERIFYKO_KEY: "cosmos-verifyko-account-key"
    DATASOURCE_PASSWORD: "pp-nodo-offline-oracle-password"
  keyvault:
    name: "pagopa-p-nodo-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  tmpVolumeMount:
    create: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: node-technicalsupport
            namespaces: ["nodo"]
            topologyKey: topology.kubernetes.io/zone
  canaryDelivery:
    deployment:
      image:
        tag: 1.0.3-5-using_re_cosmos_nosql
    create: false
